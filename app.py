import telebot
from telebot import types
import os
import random 
import time

bot = telebot.TeleBot("1543078251:AAHCkuKqo_0cjDUJe-AxS5mK7ViTukwCeLY")
if not os.path.exists('voice/'):
    os.makedirs('voice/')

markup = types.ReplyKeyboardMarkup(row_width=1)
itembtn1 = types.KeyboardButton('üë®üèº‚Äçüíª –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')
itembtn2 = types.KeyboardButton('üë®üèæ‚Äçüè´ –ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ')
markup.add(itembtn1, itembtn2)


clients = {}
imageList = ['–∞.jpg','–±.jpg','–≤.jpg','–≥.jpg','–¥.jpg','–µ.jpg','—ë.jpg','–∂.jpg','–∑.jpg','–∏.jpg','–π.jpg','–∫.jpg','–ª.jpg','–º.jpg','–Ω.jpg','–æ.jpg','–ø.jpg','—Ä.jpg','—Å.jpg','—Ç.jpg','—É.jpg','—Ñ.jpg','—Ö.jpg','—Ü.jpg','—á.jpg', '—à.jpg' , '—â.jpg', '—ä.jpg','—ã.jpg','—å.jpg','—ç.jpg','—é.jpg','—è.jpg']
voiceList = ['–∞.ogg','–±.ogg','–≤.ogg','–≥.ogg','–¥.ogg','–µ.ogg','—ë.ogg','–∂.ogg','–∑.ogg','–∏.ogg','–π.ogg','–∫.ogg','–ª.ogg','–º.ogg','–Ω.ogg','–æ.ogg','–ø.ogg','—Ä.ogg','—Å.ogg','—Ç.ogg','—É.ogg','—Ñ.ogg','—Ö.ogg','—Ü.ogg','—á.ogg','—à.ogg','—â.ogg','—ä.ogg','—ã.ogg','—å.ogg','—ç.ogg','—é.ogg','—è.ogg']
alphabet = ['–∞','–±','–≤','–≥','–¥','–µ','—ë','–∂','–∑','–∏','–π','–∫','–ª','–º','–Ω','–æ','–ø','—Ä','—Å','—Ç','—É','—Ñ','—Ö','—Ü','—á','—à','—â','—ä','—ã','—å','—ç','—é','—è']
# current_number = 30

@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    global clients
    clients[chat_id] = 0
    if not os.path.exists('voice/' + str(chat_id)):
        os.makedirs('voice/' + str(chat_id))
    start_msg = "–≠—Ç–æ—Ç –±–æ—Ç –Ω–∞—É—á–∏—Ç –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞ –∞–ª—Ñ–∞–≤–∏—Ç—É"
    bot.send_message(chat_id, start_msg  ,reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def echo_all(message):
    chat_id = message.chat.id
    global clients
    if message.text == 'üë®üèæ‚Äçüè´ –ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ':
        for i in range(33):

            photo = open('words/' + imageList[i], 'rb')
            bot.send_photo(chat_id, photo)
            time.sleep(1)

            audio = open('voice/' + str(chat_id) + '/' + voiceList[i], 'rb')
            bot.send_voice(chat_id, audio)
            time.sleep(5)
            
            clients[chat_id] += 1

    elif message.text == 'üë®üèº‚Äçüíª –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ':
        bot.send_message(chat_id, 'A', reply_markup=types.ReplyKeyboardRemove(selective=False))
        clients[chat_id] = 0

@bot.message_handler(content_types=['voice'])
def voice_processing(message):
    chat_id = message.chat.id
    global clients
    
    if clients[chat_id] <= 31:
        file_id = message.voice.file_id
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        with open('voice/' + str(chat_id) + '/' + voiceList[clients[chat_id]],'wb') as new_file:
            new_file.write(downloaded_file)

        clients[chat_id] += 1
        bot.send_message(chat_id, alphabet[clients[chat_id]].upper())
    else:
        endmsg = '–ë–æ—Ç —Å–æ—Ö—Ä–∞–Ω–∏–ª –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∞–ª—Ñ–∞–≤–∏—Ç.'
        bot.send_message(chat_id, endmsg, reply_markup=markup)

bot.polling()